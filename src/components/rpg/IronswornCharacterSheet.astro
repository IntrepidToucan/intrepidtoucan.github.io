---
// import { displayPlusNumber } from "@utils/index";

type IronswornAssetType = "companion" | "path" | "combat_talent" | "ritual";
type IronswornChallengeRank =
  | "troublesome"
  | "dangerous"
  | "formidable"
  | "extreme"
  | "epic";
type IronswornDebility =
  | "wounded"
  | "shaken"
  | "unprepared"
  | "encumbered"
  | "maimed"
  | "corrupted"
  | "cursed"
  | "tormented";
type IronswornVowType = "background_vow" | "inciting_incident";

interface IronswornAsset {
  data: unknown;
  type: IronswornAssetType;
}

interface IronswornCharacterStats {
  edge: number;
  heart: number;
  iron: number;
  shadow: number;
  wits: number;
}

interface IronswornEquipment {
  name: string;
  description: string;
}

interface IronswornVow {
  description: string;
  rank: IronswornChallengeRank;
  type: IronswornVowType;
}

interface Props {
  assets: IronswornAsset[];
  bonds: number;
  debilities: IronswornDebility[];
  equipment: IronswornEquipment[];
  experience: number;
  health: number;
  momentum: number;
  name: string;
  spirit: number;
  stats: IronswornCharacterStats;
  supply: number;
  vows: IronswornVow[];
}

const {
  // health,
  name,
  // spirit,
  stats: { edge, heart, iron, shadow, wits },
  // supply,
  vows,
} = Astro.props;

const IronswornTermDescriptionMapping: Partial<
  Record<
    keyof Omit<
      Props & IronswornCharacterStats,
      "bonds" | "name" | "stats" | "vows"
    >,
    string
  >
> = {
  edge: "Quickness, agility, and prowess in ranged combat",
  health: "Your current physical condition and stamina",
  heart: "Courage, willpower, empathy, sociability, and loyalty",
  iron: "Physical strength, endurance, aggressiveness, and prowess in close combat",
  momentum: "Represents how you are faring in your quests",
  shadow: "Sneakiness, deceptiveness, and cunning",
  spirit: "Your current mental state",
  supply:
    "An abstract representation of your preparedness, including ammo, food, water, and general upkeep",
  wits: "Expertise, knowledge, and observation",
};

const backgroundVow = vows.find((vow) => vow.type === "background_vow");
---

<article class="root paragraphs-container">
  <h3>{name}</h3>

  <ul class="stats">
    <li title={IronswornTermDescriptionMapping.edge}>
      <h4>Edge</h4>
      <p>{edge}</p>
    </li>
    <li title={IronswornTermDescriptionMapping.heart}>
      <h4>Heart</h4>
      <p>{heart}</p>
    </li>
    <li title={IronswornTermDescriptionMapping.iron}>
      <h4>Iron</h4>
      <p>{iron}</p>
    </li>
    <li title={IronswornTermDescriptionMapping.shadow}>
      <h4>Shadow</h4>
      <p>{shadow}</p>
    </li>
    <li title={IronswornTermDescriptionMapping.wits}>
      <h4>Wits</h4>
      <p>{wits}</p>
    </li>
  </ul>

  {
    backgroundVow && (
      <div>
        <h4>Background Vow</h4>

        <p>{backgroundVow.description}</p>
      </div>
    )
  }
</article>

<style>
  h3 {
    font-size: var(--mm--font-size--3);
    text-align: center;
  }

  h4 {
    font-size: var(--mm--font-size--2);
    margin-block-end: var(--mm--spacing--2);
  }

  .root {
    background-color: var(--mm--color--neutral-0);
    color: var(--mm--color--neutral-9);
    border-radius: var(--mm--border-radius--1);
    padding: var(--mm--spacing--4);
  }

  .stats {
    display: flex;
    flex-wrap: wrap;
    gap: var(--mm--spacing--3);
    padding: 0;

    & > li {
      background-color: var(--mm--color--neutral-2);
      flex: 1 1 0;
      list-style-type: none;
      padding: var(--mm--spacing--3);
      text-align: center;

      & > h4 {
        display: block;
        font-size: var(--mm--font-size--1);
        margin-block-end: var(--mm--spacing--2);
      }

      & > p {
        font-size: var(--mm--font-size--2);
      }
    }
  }

  @media screen and (min-width: 481px) {
    .root {
      inline-size: 80%;
      margin-inline: auto;
    }
  }
</style>
